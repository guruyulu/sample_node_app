apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.applicationName }}
  namespace: {{ .Values.appNamespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.deployment.applicationName }}
    chart: {{ .Values.deployment.applicationName }}-{{ .Chart.Version }}
    release: {{ .Values.deployment.applicationName }}
    heritage: {{ .Values.deployment.applicationName }}
spec:
  {{- if .Values.deployment.strategy.enabled }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    rollingUpdate: #Update Pods a certain number at a time
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }} #Total number of pods that can be unavailable at once
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}  #Maximum number of pods that can be deployed above desired state
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  {{- end }}
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.deployment.applicationName }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app.kubernetes.io/name: {{ .Values.deployment.applicationName }}
        linkerd.io/inject: {{ .Values.deployment.linkerdEnabled }}
    spec:
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      securityContext:
        {{- toYaml .Values.deployment.podSecurityContext | nindent 8 }}
      {{- if .Values.deployment.hostsfile.enabled }}
      hostAliases:
        {{- range .Values.deployment.hostsfile.records }}
      - ip: "{{ .ip }}"
        hostnames:
        - "{{ .name }}"
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Values.deployment.applicationName }}
          securityContext:
            {{- toYaml .Values.deployment.securityContext | nindent 12 }}
          {{- if .Values.deployment.image.tag }}
          image: {{ .Values.deployment.registry }}/{{ .Values.deployment.image.name }}:{{ .Values.deployment.image.tag }}
          {{ else }}
          image: {{ .Values.deployment.image.name }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          {{- end }}
          {{- if .Values.deployment.ports.enabled }}
          ports:
          - containerPort: {{ .Values.deployment.ports.containerPort }}
          {{- end }}
          {{- if .Values.deployment.hostpathVolume.enabled }}
          volumeMounts:
          - name: {{ .Values.deployment.hostpathVolume.name }}
            mountPath: {{ .Values.deployment.hostpathVolume.mountPath }}
          {{- end }}
          {{- if .Values.deployment.volumeMounts.enabled }}
          volumeMounts:
          {{- range .Values.deployment.volumeMounts.volumes }}
          - mountPath: {{ .Values.deployment.volumeMounts.volumes.mountPath }}
            name: {{ .Values.deployment.volumeMounts.volumes.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.deployment.env.enabled }}
          env:
          {{- toYaml $.Values.deployment.env | nindent 10 }}
          {{- end }}
  {{- if .Values.deployment.secrets.enabled }}
  {{- range .Values.deployment.secrets.data }}
          - name: {{ .name }}
            valueFrom:
              secretKeyRef:
                name: {{ .valueFrom.name }}
                key: {{ .valueFrom.key }}
  {{- end }}
  {{- end }}
  {{- if .Values.deployment.configmaps.enabled }}
          envFrom:
          - configMapRef:
              name: {{ .Values.deployment.applicationName }}
  {{- end }}
          {{- if .Values.deployment.resources.enabled }}
          resources:
            limits:
              memory: {{ .Values.deployment.resources.limits.memory }}
              cpu: {{ .Values.deployment.resources.limits.cpu }}
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu }}
              memory: {{ .Values.deployment.resources.requests.memory }}
          {{- end }}
          {{- if .Values.deployment.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.readinessProbe.httpGet.path }}
              port: {{ .Values.deployment.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.deployment.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbe.httpGet.path }}
              port: {{ .Values.deployment.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
          {{- end }}
      {{- if .Values.deployment.imagePullSecrets.enabled }}
      imagePullSecrets:
      - name: {{ .Values.deployment.imagePullSecrets.secretName }}
      {{- end }}

      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.deployment.volumeMounts.enabled }}
      volumes:
      {{- range .Values.deployment.volumeMounts.volumes }}
      - name: {{ .Values.deployment.volumeMounts.volumes.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.deployment.volumeMounts.volumes.claimName }}
      {{- end }}
    {{- end }}
    {{- if .Values.deployment.hostpathVolume.enabled }}
      volumes:
        - name: {{ .Values.deployment.hostpathVolume.name }}
          hostPath:
            path: {{ .Values.deployment.hostpathVolume.mountPath }}
            type: {{ .Values.deployment.hostpathVolume.type }}
    {{- end }}